// MIT Licensed (see LICENSE.md).
#pragma once

// Written as an unholy macro so it can be used at compile time.
// We could have used a constexpr function instead of this madness if we had
// that C++11 feature!

#define LOG2_64(X) ((X) == 0 ? 63 : 0)
#define LOG2_63(X) ((X) == 0 ? 62 : LOG2_64((X) >> 1))
#define LOG2_62(X) ((X) == 0 ? 61 : LOG2_63((X) >> 1))
#define LOG2_61(X) ((X) == 0 ? 60 : LOG2_62((X) >> 1))
#define LOG2_60(X) ((X) == 0 ? 59 : LOG2_61((X) >> 1))
#define LOG2_59(X) ((X) == 0 ? 58 : LOG2_60((X) >> 1))
#define LOG2_58(X) ((X) == 0 ? 57 : LOG2_59((X) >> 1))
#define LOG2_57(X) ((X) == 0 ? 56 : LOG2_58((X) >> 1))
#define LOG2_56(X) ((X) == 0 ? 55 : LOG2_57((X) >> 1))
#define LOG2_55(X) ((X) == 0 ? 54 : LOG2_56((X) >> 1))
#define LOG2_54(X) ((X) == 0 ? 53 : LOG2_55((X) >> 1))
#define LOG2_53(X) ((X) == 0 ? 52 : LOG2_54((X) >> 1))
#define LOG2_52(X) ((X) == 0 ? 51 : LOG2_53((X) >> 1))
#define LOG2_51(X) ((X) == 0 ? 50 : LOG2_52((X) >> 1))
#define LOG2_50(X) ((X) == 0 ? 49 : LOG2_51((X) >> 1))
#define LOG2_49(X) ((X) == 0 ? 48 : LOG2_50((X) >> 1))
#define LOG2_48(X) ((X) == 0 ? 47 : LOG2_49((X) >> 1))
#define LOG2_47(X) ((X) == 0 ? 46 : LOG2_48((X) >> 1))
#define LOG2_46(X) ((X) == 0 ? 45 : LOG2_47((X) >> 1))
#define LOG2_45(X) ((X) == 0 ? 44 : LOG2_46((X) >> 1))
#define LOG2_44(X) ((X) == 0 ? 43 : LOG2_45((X) >> 1))
#define LOG2_43(X) ((X) == 0 ? 42 : LOG2_44((X) >> 1))
#define LOG2_42(X) ((X) == 0 ? 41 : LOG2_43((X) >> 1))
#define LOG2_41(X) ((X) == 0 ? 40 : LOG2_42((X) >> 1))
#define LOG2_40(X) ((X) == 0 ? 39 : LOG2_41((X) >> 1))
#define LOG2_39(X) ((X) == 0 ? 38 : LOG2_40((X) >> 1))
#define LOG2_38(X) ((X) == 0 ? 37 : LOG2_39((X) >> 1))
#define LOG2_37(X) ((X) == 0 ? 36 : LOG2_38((X) >> 1))
#define LOG2_36(X) ((X) == 0 ? 35 : LOG2_37((X) >> 1))
#define LOG2_35(X) ((X) == 0 ? 34 : LOG2_36((X) >> 1))
#define LOG2_34(X) ((X) == 0 ? 33 : LOG2_35((X) >> 1))
#define LOG2_33(X) ((X) == 0 ? 32 : LOG2_34((X) >> 1))
#define LOG2_32(X) ((X) == 0 ? 31 : LOG2_33((X) >> 1))
#define LOG2_31(X) ((X) == 0 ? 30 : LOG2_32((X) >> 1))
#define LOG2_30(X) ((X) == 0 ? 29 : LOG2_31((X) >> 1))
#define LOG2_29(X) ((X) == 0 ? 28 : LOG2_30((X) >> 1))
#define LOG2_28(X) ((X) == 0 ? 27 : LOG2_29((X) >> 1))
#define LOG2_27(X) ((X) == 0 ? 26 : LOG2_28((X) >> 1))
#define LOG2_26(X) ((X) == 0 ? 25 : LOG2_27((X) >> 1))
#define LOG2_25(X) ((X) == 0 ? 24 : LOG2_26((X) >> 1))
#define LOG2_24(X) ((X) == 0 ? 23 : LOG2_25((X) >> 1))
#define LOG2_23(X) ((X) == 0 ? 22 : LOG2_24((X) >> 1))
#define LOG2_22(X) ((X) == 0 ? 21 : LOG2_23((X) >> 1))
#define LOG2_21(X) ((X) == 0 ? 20 : LOG2_22((X) >> 1))
#define LOG2_20(X) ((X) == 0 ? 19 : LOG2_21((X) >> 1))
#define LOG2_19(X) ((X) == 0 ? 18 : LOG2_20((X) >> 1))
#define LOG2_18(X) ((X) == 0 ? 17 : LOG2_19((X) >> 1))
#define LOG2_17(X) ((X) == 0 ? 16 : LOG2_18((X) >> 1))
#define LOG2_16(X) ((X) == 0 ? 15 : LOG2_17((X) >> 1))
#define LOG2_15(X) ((X) == 0 ? 14 : LOG2_16((X) >> 1))
#define LOG2_14(X) ((X) == 0 ? 13 : LOG2_15((X) >> 1))
#define LOG2_13(X) ((X) == 0 ? 12 : LOG2_14((X) >> 1))
#define LOG2_12(X) ((X) == 0 ? 11 : LOG2_13((X) >> 1))
#define LOG2_11(X) ((X) == 0 ? 10 : LOG2_12((X) >> 1))
#define LOG2_10(X) ((X) == 0 ? 9 : LOG2_11((X) >> 1))
#define LOG2_9(X) ((X) == 0 ? 8 : LOG2_10((X) >> 1))
#define LOG2_8(X) ((X) == 0 ? 7 : LOG2_9((X) >> 1))
#define LOG2_7(X) ((X) == 0 ? 6 : LOG2_8((X) >> 1))
#define LOG2_6(X) ((X) == 0 ? 5 : LOG2_7((X) >> 1))
#define LOG2_5(X) ((X) == 0 ? 4 : LOG2_6((X) >> 1))
#define LOG2_4(X) ((X) == 0 ? 3 : LOG2_5((X) >> 1))
#define LOG2_3(X) ((X) == 0 ? 2 : LOG2_4((X) >> 1))
#define LOG2_2(X) ((X) == 0 ? 1 : LOG2_3((X) >> 1))
#define LOG2_1(X) ((X) == 0 ? 0 : LOG2_2((X) >> 1))
#define LOG2_0(X) ((X) == 0 ? 0 : LOG2_1((X) >> 1))

/// Log base 2 of X
#define LOG2(X) LOG2_0(X)
